What happens when you initialize a repository? Why do you need to do it?

	A repository is created in the current directory. 
	Metadata files and directories are created, e.g. .git directory.
	
	This is needed to work with Git.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	
	In the staging area files are tracked for changes.
	But they are not yet in the repository. They are working copies.
	
	
How can you use the staging area to make sure you have one commit per logical
change?
	
	I can change what is not staged but should be, then stage this.
	
What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches are helpful when we need to split our product line to versions.
	These versions can be later merged into one main line.

How do the diagrams help you visualize the branch structure?

	By displaying commits of all selected branches in the chronological order.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	The result is the commit of all changes from both branches.
	We represent the merge in that way because it is easy to identify commits in branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	Pros of automatic merging: 
		Savings on time and simplicity.
	Cons: 
		Error prone.